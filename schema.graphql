enum ApproveStatus {
  default
  cancelled
  confirmed
}

type Block @entity {
  id: ID! # block hash
  number: BigInt
  parentHash: String
  specVersion: Int
  timestamp: Date

  extrinsics: [Extrinsic] @derivedFrom(field: "block")
}

type Extrinsic @entity {
  id: ID! # extrinsic hash
  args: String
  method: String
  nonce: BigInt
  isSigned: Boolean
  isSuccess: Boolean
  section: String
  signerId: String # AccountId
  signature: String
  timestamp: Date
  tip: BigInt

  block: Block # create relation to block
}

type MultisigAccount @entity {
  id: ID! # multisigAccountId (address)
  threshold: Int!
  members: [String!]!

  record: [MultisigRecord] @derivedFrom(field: "multisigAccount")
}

type MultisigRecord @entity {
  id: ID! # multisigAccountId-blockHeight-extrinsicIdx
  createExtrinsicIdx: String! # blockHeight-extrinsicIdx
  module: String!
  method: String!
  multisigAccount: MultisigAccount!
  timestamp: Date
  block: Block!
  confirmBlock: Block
  status: ApproveStatus! # default/cancelled/confirmed
  confirmExtrinsicIdx: String
  cancelExtrinsicIdx: String
  approvals: [String!]
}

type ApproveRecord @entity {
  id: ID! # accountId-blockHeight-extrinsicIdx
  account: String! # approve account address
  multisigRecord: MultisigRecord!
  callHash: String!
}
